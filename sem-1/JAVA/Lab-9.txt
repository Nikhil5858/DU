. Demonstrating ArithmeticException and ArrayIndexOutOfBoundsException
java
Insert Code
Edit
Copy code
public class ExceptionDemo {
    public static void main(String[] args) {
        // Demonstrating ArithmeticException
        try {
            int result = 10 / 0; // This will cause ArithmeticException
        } catch (ArithmeticException e) {
            System.out.println("Arithmetic Exception: Cannot divide by zero.");
        }

        // Demonstrating ArrayIndexOutOfBoundsException
        int[] numbers = {1, 2, 3};
        try {
            int number = numbers[5]; // This will cause ArrayIndexOutOfBoundsException
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("Array Index Out Of Bounds Exception: Index is out of bounds.");
        }
    }
}
2. Bank Account with Custom InsufficientFundException
java
Insert Code
Edit
Copy code
class InsufficientFundException extends Exception {
    public InsufficientFundException(String message) {
        super(message);
    }
}

class Account {
    private double balance;

    public Account(double initialBalance) {
        this.balance = initialBalance;
    }

    public void deposit(double amount) {
        balance += amount;
        System.out.println("Deposited: " + amount);
    }

    public void withdraw(double amount) throws InsufficientFundException {
        if (amount > balance) {
            throw new InsufficientFundException("Insufficient funds: Cannot withdraw " + amount);
        }
        balance -= amount;
        System.out.println("Withdrawn: " + amount);
    }

    public double getBalance() {
        return balance;
    }
}

public class BankAccountDemo {
    public static void main(String[] args) {
        Account account = new Account(1000.0);
        try {
            account.withdraw(1200.0);
        } catch (InsufficientFundException e) {
            System.out.println(e.getMessage());
        }
    }
}
3. Custom Exception DarshanUniException
java
Insert Code
Edit
Copy code
class DarshanUniException extends Exception {
    public DarshanUniException(String message) {
        super(message);
    }
}

public class CustomExceptionDemo {
    public static void main(String[] args) {
        try {
            throw new DarshanUniException("This is a custom exception: Darshan University Exception.");
        } catch (DarshanUniException e) {
            System.out.println(e.getMessage());
        }
    }
}
4. Division with Exception Handling
java
Insert Code
Edit
Copy code
import java.util.Scanner;

public class DivisionDemo {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter first number (Num1): ");
        String input1 = scanner.nextLine();
        System.out.print("Enter second number (Num2): ");
        String input2 = scanner.nextLine();

        try {
            int num1 = Integer.parseInt(input1);
            int num2 = Integer.parseInt(input2);
            int result = num1 / num2;
            System.out.println("Result: " + result);
        } catch (NumberFormatException e) {
            System.out.println("Number Format Exception: Please enter valid integers.");
        } catch (ArithmeticException e) {
            System.out.println("Arithmetic Exception: Cannot divide by zero.");
        }
    }
}